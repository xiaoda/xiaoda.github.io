[{"title":"资源拓扑图 milestone","date":"2017-09-30T02:13:24.000Z","path":"资源拓扑图milestone/","text":"拓扑图在常规的前端开发中很少用到，但在云计算的前端中就很重要了。拓扑图可以将云计算资源直观地展现在用户面前，使用户轻松地理清资源关系，还可以直接对看到的资源进行操作。在一番调研后发现，AWS、ServiceNow、VisualOps、青云等云计算服务商已有资源拓扑图或类似的应用。那么如何开发一个资源拓扑图项目呢？ 首先，一个资源拓扑图项目应该分为两部分。底层基础：拓扑图插件（自己开发或第三方）；上层建筑：资源拓扑图（业务所需的配置、功能）。 拓扑图插件的选择是第一个重要的决定。拓扑图插件的本质是根据 js 描述的特征生成对应的拓扑图输出到页面的 canvas 元素上，并提供必要的事件和方法。当前主要有以下拓扑图插件库： jointjs（收费）：功能强大，AWS 资源拓扑图使用的插件库 vis.js：Github 星星多，文档、案例齐全，偏底层 cytoscape.js：不错的拓扑图插件，偏底层 sigmajs：侧重于密集的点线图 gojs（收费）：多款预置的拓扑图类型，偏应用 在一番比较后，我选择了 vis.js。原因是： 开源免费库，没有使用成本和法律风险的顾虑。 文档、案例齐全，更容易上手和深入。 API 偏底层，便于调整基础样式和功能。 其实在选择拓扑图插件时也有考虑过自己开发一个拓扑图插件，好处是可以完全从项目的需求入手，满足所有要求。但这么干的问题是工作量大，无法在短期内完成；此外自己开发的拓扑图插件在初期一定会有很多 bug 需要修复，这是我们的资源拓扑图项目所不能承受的。 确定好拓扑图插件后就该搭建上层建筑了。在几周的开发之后，该项目以 jQuery 插件（Bootstrap 4 / ES 6 风格）的方式完成第一版并输出，后续会支持更多操作。","tags":[]},{"title":"精简通用的帮助方法库：xdhelper","date":"2017-06-09T03:44:11.000Z","path":"精简通用的帮助方法库：xdhelper/","text":"xdhelper 是一个 JS 帮助方法库，开发时尝试了一些新的东西： webpack 2.x 跟 webpack 1.x 相比，基础功能、配置文件变化不大，迁移方便。 flowtype 函数参数和输出的数据格式必须指定。 eslint 对 JS 格式、语法等进行严格检查，强制纠正不规范的地方。与 flowtype 配合使用需要在 eslint 配置文件里加入 flowtype 的检查方法。 mocha JS 单元测试。 npm publish 封装 npm 包并发布，方便外部调用。 travis 在 npm 和 github 项目主页显示测试和构建状况。","tags":[]},{"title":"原生js实现简单事件代理","date":"2017-02-27T16:24:27.000Z","path":"原生js实现简单事件代理/","text":"与 jQuery 的事件代理使用相同参数 区别：自定义了 delegate 函数，而非 jQuery 对象的方法 只支持传入单个 class 名 1234567891011function delegate (action, className, callback) &#123; document.addEventListener(action, function (event) &#123; if (event.target.classList.contains(className.slice(1))) &#123; callback(event) &#125; &#125;)&#125;delegate('click', '.block', function (event) &#123; console.log('事件 #代理#')&#125;) Live Demo","tags":[]},{"title":"Hello World","date":"2017-02-14T08:54:39.000Z","path":"hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]